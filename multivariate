import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
from sklearn.linear_model import LinearRegression
from sklearn.metrics import r2_score

np.random.seed(0)
X1 = np.random.rand(100)
X2 = np.random.rand(100)
Y = 3*X1 + 2*X2 + np.random.randn(100)

X = np.column_stack((X1, X2))

model = LinearRegression()
model.fit(X, Y)

Y_pred = model.predict(X)

r2 = r2_score(Y, Y_pred)

print("Coefficients: ", model.coef_)
print("Intercept: ", model.intercept_)
print("R-squared: ", r2)
fig = plt.figure()
ax = fig.add_subplot(111, projection='3d')

ax.scatter(X1, X2, Y, color='blue', label='Actual data')

X1_surf, X2_surf = np.meshgrid(np.linspace(X1.min(), X1.max(), 10), np.linspace(X2.min(), X2.max(), 10))
Y_surf = model.intercept_ + model.coef_[0] * X1_surf + model.coef_[1] * X2_surf
ax.plot_surface(X1_surf, X2_surf, Y_surf, color='r', alpha=0.5, rstride=100, cstride=100)

ax.set_xlabel('X1')
ax.set_ylabel('X2')
ax.set_zlabel('Y')
ax.legend()

plt.show()
